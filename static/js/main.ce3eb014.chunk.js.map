{"version":3,"sources":["components/moviePoster/MoviePoster.js","components/movies/Movies.js","components/movieDetail/MovieDetail.js","components/header/home.png","components/header/Header.js","App.js","components/ApiCalls.js","components/Utils.js","reportWebVitals.js","index.js"],"names":["MoviePoster","image","findMovie","id","to","className","onClick","alt","src","Movies","movieCards","movies","map","movie","title","rating","average_rating","poster_path","MovieDetail","movieInfo","budget","revenue","genre","genres","backdrop_path","tagline","overview","runtime","release_date","Header","renderMainPage","MyImage","App","getMovies","newMovie","setState","state","movieID","updateMovieID","fetch","then","response","json","data","join","toFixed","split","shift","formatMovieDetails","catch","error","this","length","exact","path","render","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce3eb014.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './MoviePoster.css';\n\nconst MoviePoster = ({image, findMovie, id}) => {\n  return (\n    <Link to={`/${id}`}>\n      <div className=\"poster\" id={id} onClick={() => findMovie(id)}>\n        <img alt=\"movie-poster\" className=\"movie-poster\" src={image}/>\n      </div>\n    </Link>\n  )\n}\n\nexport default MoviePoster","import React from 'react';\nimport MoviePoster from '../moviePoster/MoviePoster';\nimport './Movies.css';\n\nconst Movies = ({findMovie, movies}) => {\n  const movieCards = movies.map(movie => {\n    return (\n      <MoviePoster\n        title={movie.title}\n        rating={movie.average_rating}\n        image={movie.poster_path}\n        id={movie.id}\n        key={movie.id}\n        findMovie={findMovie}\n      />\n    )\n  })\n\n  return (\n    <div className='movies-container'>\n      {movieCards}\n    </div>\n  )\n}\n\nexport default Movies;","import React from 'react';\nimport './MovieDetail.css';\n\nconst MovieDetail = ({movieInfo}) => {\n  let budget = movieInfo.budget ? `Budget: $${movieInfo.budget}` : false\n  let revenue = movieInfo.revenue ? `Revenue: $${movieInfo.revenue}` : false\n  let genre = movieInfo.genres ? `Genre(s): ${movieInfo.genres}` : false\n\n  return (\n    <section className='movie-detail-section'> \n      <div className=\"movie-detail-backdrop\">\n        <img className=\"backdrop\" src={movieInfo.backdrop_path}/>\n      </div>\n      <div className=\"movie-detail-list\">\n        <h2 className=\"title\">{movieInfo.title}</h2>\n        <h3 className=\"tagline\">{movieInfo.tagline}</h3>\n        <p className=\"overview\">{movieInfo.overview}</p>\n        <p className=\"genre\">{genre}</p>\n        <p className=\"average-rating\">Average Rating: {movieInfo.average_rating}</p> \n        <p className=\"budget\">{budget}</p>\n        <p className=\"revenue\">{revenue}</p>\n        <p className=\"runtime\">Runtime: {movieInfo.runtime} min</p>\n        <p className=\"release-date\">Release Date: {movieInfo.release_date}</p>\n      </div>\n    </section> \n  )\n}\n\nexport default MovieDetail;","export default __webpack_public_path__ + \"static/media/home.4b8cc3a7.png\";","import React from 'react';\nimport './Header.css';\nimport {Link} from 'react-router-dom';\nimport MyImage from './home.png';\n\nconst Header = ({findMovie, renderMainPage}) => {\n   return (\n        <header>\n        <Link to='/'>\n          <button alt=\"home-button\" aria-label=\"Home Button\" className=\"home-button\" onClick={renderMainPage}>\n            <img alt=\"home button\" className=\"home-image\" src={MyImage} />\n          </button>\n        </Link>\n        <h1 className=\"site-title\">Rancid Tomatillos</h1>\n      </header>\n  )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\nimport Movies from './components/movies/Movies';\nimport MovieDetail from './components/movieDetail/MovieDetail';\nimport Header from './components/header/Header';\nimport { Route, Redirect } from 'react-router-dom';\nimport { findMovie, allMovies } from './components/ApiCalls'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      movieID: 0,\n      error: ''\n    }\n  }\n  \n    componentDidMount() {\n      allMovies()\n      .then(data=> {\n        this.setState({movies: data.movies})\n      })\n      .catch(() => this.setState({error: \"We're experiencing server technical difficulties, please check back again later!\"}))\n    }\n    \n    getMovies = (newMovie) => {\n      this.setState({ movies: [...this.state.movies, newMovie] });\n    }\n    \n    renderMainPage = () => {\n      this.setState({movieID: 0})\n    }\n\n    updateMovieID = (id) => {\n      findMovie(id)\n        .then(data => this.setState({movieID: data.movie}))\n        .catch(() => this.setState({error: \"We're experiencing server technical difficulties, please check back again later!\"}))\n    }\n\n    render() {\n      return(\n        <main className='App'>\n          <Header className ='App-header' \n          findMovie = {this.findMovie}\n          />\n          {!this.state.movies.length && !this.state.error.length &&\n            <h2>Loading movies ...</h2>\n          }\n          {!!this.state.error.length && \n            <h2>{this.state.error}</h2>\n          }\n          <Route exact path=\"/\" render={ () => {\n            return <Movies findMovie={this.updateMovieID} movies={this.state.movies}/>\n          }}/>\n          <Route path={`/:id`}  render={ () => {\n            return <MovieDetail movieInfo = {this.state.movieID} />\n          }}/>\n          <Redirect to={'/'} />\n        </main>\n      )\n    };\n}\n\nexport default App;","import { formatMovieDetails } from \"./Utils\"\n\nexport const findMovie = (id) => {\n  return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n    .then(response => response.json())\n    .then(data => formatMovieDetails(data))\n}\n\nexport const allMovies = () => {\n  return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n      .then(response => response.json())\n}","export const formatMovieDetails = (data) => {\n  data.movie.genres = data.movie.genres.join(', ')\n  data.movie.average_rating = data.movie.average_rating.toFixed(1)\n  data.movie.release_date = data.movie.release_date.split('-').shift();\n  return data\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App /> \n    </BrowserRouter> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}